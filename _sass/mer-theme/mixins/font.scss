/**
 * Copyright (c) 2017 - Marc Ed Raffalli
 *
 * https://marc-ed-raffalli.github.io/
 *
 * See LICENCE file
 */

// $file   - Name of the font file
// $weight - Weight of the font
// $style  - Style of the font
@function createFontMap($file, $weight:normal, $style:normal) {
  $def: (
    file: $file,
    weight: $weight,
    style: $style
  );
  @return $def;
}

// $fontFamily - Font family
// $basePath   - Base path where the font is stored
// $formats    - List of formats (woff, woff2, truetype)
// $defList    - List of maps as returned by createFontMap
@mixin addFontFace($fontFamily, $basePath, $formats, $defList) {
  @each $def in $defList {
    $src: ();
    @each $format in $formats {
      $ext: $format;

      @if ($format == 'truetype') {
        $ext: 'ttf';
      }

      $url: url('#{$basePath}/#{map_get($def, 'file')}.#{$ext}') format(quote($format));
      $src: append($src, $url, comma);
    }
    @font-face {
      font-family: quote($fontFamily);
      font-weight: map_get($def, 'weight');
      font-style: map_get($def, 'style');
      src: $src;
    }
  }
}
